scheduler:
  module: dagster.core.scheduler
  class: DagsterDaemonScheduler

run_coordinator:
  module: dagster.core.run_coordinator
  class: QueuedRunCoordinator
  config:
    tag_concurrency_limits:
      - key: "job"
        value: "my_unique_job"
        limit: 5
      - key: "training"
        value: "my_unique_training"
        limit: 1
      - key: "predict"
        value: "my_unique_predict"
        limit: 1
      - key: "notebook"
        value: "my_unique_notebook"
        limit: 1
      - key: "lower_part"
        value: "my_unique_lower_part"
        limit: 1
      - key: "resample_anomaly"
        value: "my_unique_resample_anomaly"
        limit: 1
      - key: "linear_prediction"
        value: "my_unique_linear_prediction"
        limit: 1
      - key: "maintenance_job"
        value: "my_unique_maintenance_job"
        limit: 1
    max_concurrent_runs: 100

run_monitoring:
  enabled: true

run_launcher:
  module: dagster_docker
  class: DockerRunLauncher
  config:
    env_vars:
      - DAGSTER_POSTGRES_USER
      - DAGSTER_POSTGRES_PASSWORD
      - DAGSTER_POSTGRES_DB
    network: dagster_network
    container_kwargs:
      volumes: # Make docker client accessible to any launched containers as well
        - /var/run/docker.sock:/var/run/docker.sock
        - /tmp/io_manager_storage:/tmp/io_manager_storage
        - /home/dagster/volumes/checkpoints:/opt/dagster/intelligent_pipeline/checkpoints
        - /home/dagster/volumes/models:/opt/dagster/intelligent_pipeline/models
        - /home/dagster/volumes/reports:/opt/dagster/intelligent_pipeline/notebooks
        - /home/dagster/dagster_home/:/opt/dagster/dagster_home/

run_storage:
  module: dagster_postgres.run_storage
  class: PostgresRunStorage
  config:
    postgres_db:
      hostname: dagster_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

schedule_storage:
  module: dagster_postgres.schedule_storage
  class: PostgresScheduleStorage
  config:
    postgres_db:
      hostname: dagster_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

event_log_storage:
  module: dagster_postgres.event_log
  class: PostgresEventLogStorage
  config:
    postgres_db:
      hostname: dagster_postgresql
      username:
        env: DAGSTER_POSTGRES_USER
      password:
        env: DAGSTER_POSTGRES_PASSWORD
      db_name:
        env: DAGSTER_POSTGRES_DB
      port: 5432

telemetry:
  enabled: false

# Data retention policies
retention:
  schedule:
    purge_after_days: 7  # Retain schedule ticks for 7 days
  sensor:
    purge_after_days:
      skipped: 7  # Retain skipped sensor ticks for 7 days
      failure: 30  # Retain failed sensor ticks for 30 days
      success: -1  # Retain successful sensor ticks indefinitely

compute_logs:
  module: dagster._core.storage.local_compute_log_manager
  class: LocalComputeLogManager
  config:
    base_dir: "/opt/dagster/dagster_home/logs"

local_artifact_storage:
  module: dagster._core.storage.root
  class: LocalArtifactStorage
  config:
    base_dir: "/opt/dagster/dagster_home"
